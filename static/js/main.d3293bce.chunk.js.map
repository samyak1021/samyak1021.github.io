{"version":3,"sources":["Components/MovieForm/MovieForm.jsx","Components/Opinion/Opinion.jsx","Components/DeleteMovie/DeleteMovie.jsx","Components/Movie/Movie.jsx","Components/MovieList/MovieList.jsx","Components/Navigation/LeftMenu.jsx","Components/Navigation/Navbar.jsx","SimilarMovies.js","Repository.js","App.js","serviceWorker.js","index.js"],"names":["Option","AutoComplete","movieDb","MovieDb","MovieForm","props","setMovies","movie","setState","movies","setMovieName","movieName","selectedMovieName","searchMovies","searchMovie","query","then","res","results","catch","console","error","handleSearch","value","onSelect","options","addMovie","state","selectedMovie","findIndex","id","key","this","dropdownMatchSelectWidth","style","width","onSearch","placeholder","map","title","undefined","releaseDate","release_date","slice","React","Component","Opinion","rating","onClick","movieId","text","label","LikeOutlined","DislikeOutlined","className","type","shape","size","DeleteMovie","onDelete","movieInfo","CloseOutlined","Meta","Card","Movie","vote_average","poster_path","action","extra","showOpinion","push","content","hoverable","cover","alt","src","actions","MovieList","emptyDescription","length","span","description","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","Item","Navbar","showDrawer","visible","onClose","current","getSimilarMovies","index","simMovies","MovieIndex","Object","values","Similar","tmdbApi","axios","create","baseURL","apiKey","TabPane","Tabs","App","log","prevState","message","success","deleteMovie","indexOf","splice","handleClick","handleChange","activeKey","updateAdhocRecommendations","newRecommendations","adhocRecommendations","concat","updateTfidfRecommendations","tfidfRecommendations","updateTmdbRecommendations","tmdbRecommendations","onSubmit","getRecommendations","getAdhocMovies","liked","disliked","languageOfMovie","original_language","voteAverage","forEach","genre_ids","Set","like","join","dislike","languages","ratings","Math","min","releaseDateFrom","sortBy","includeAdult","includeVideo","page","voteAverageFrom","withGenres","withoutGenres","originalLanguage","get","params","api_key","sort_by","include_adult","include_video","with_genres","without_genres","with_original_language","discoverMovies","response","data","finally","getTfidfMovies","dislikedId","likedId","ids","getMovieDetail","getTmdbMovies","getTmdbRecommendation","icon","SearchOutlined","VideoCameraAddOutlined","onChange","tab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3293bce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./MovieForm.css\";\r\nimport { AutoComplete } from \"antd\";\r\nimport { MovieDb } from \"moviedb-promise\";\r\n\r\n// const { Option } = AutoComplete;\r\nconst Option = AutoComplete.Option;\r\n\r\nconst movieDb = new MovieDb(\"0f8d529ca28503395a1f7dc2532ad517\");\r\n\r\nconst getReleaseYear = (releaseDate) =>\r\n  releaseDate !== undefined ? releaseDate.slice(0, 4) : \"\";\r\n\r\nclass MovieForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n      selectedMovieName: \"\",\r\n    };\r\n  }\r\n\r\n  setMovies = (movie) => {\r\n    this.setState({\r\n      movies: movie,\r\n    });\r\n  };\r\n\r\n  setMovieName = (movieName) => {\r\n    this.setState({\r\n      selectedMovieName: movieName,\r\n    });\r\n  };\r\n\r\n  searchMovies = (movieName) => {\r\n    movieDb\r\n      .searchMovie({ query: movieName })\r\n      .then((res) => {\r\n        this.setMovies(res.results);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  handleSearch = (value) => {\r\n    if (value) this.searchMovies(value);\r\n    this.setMovieName(value);\r\n  };\r\n\r\n  onSelect = (value, options) => {\r\n    const { addMovie } = this.props;\r\n    const { movies } = this.state;\r\n    // eslint-disable-next-line eqeqeq\r\n    const selectedMovie = movies.findIndex((movie) => movie.id == options.key);\r\n\r\n    addMovie(movies[selectedMovie]);\r\n  };\r\n\r\n  render() {\r\n    const { selectedMovieName, movies } = this.state;\r\n\r\n    return (\r\n      <AutoComplete\r\n        dropdownMatchSelectWidth={252}\r\n        style={{\r\n          width: 300,\r\n        }}\r\n        onSelect={this.onSelect}\r\n        onSearch={this.handleSearch}\r\n        value={selectedMovieName}\r\n        placeholder=\"Search Movies...\"\r\n      >\r\n        {movies.map((movie) => (\r\n          <Option key={movie.id} value={movie.id}>\r\n            {`${movie.title} (${getReleaseYear(movie.release_date)})`}\r\n          </Option>\r\n        ))}\r\n      </AutoComplete>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport \"./Opinion.css\";\r\nimport { Button} from 'antd';\r\nimport { LikeOutlined,DislikeOutlined} from '@ant-design/icons';\r\n\r\nfunction Opinion(props) {\r\n  const { rating, onClick, movieId } = props;\r\n\r\n  const text = rating ? \"liked\" : \"haven't liked\";\r\n  const label = rating ? <LikeOutlined /> : <DislikeOutlined /> ;\r\n\r\n  return (\r\n    <div className=\"custom-container\">\r\n      <Button className=\"btn btn-primary\" type=\"primary\" shape=\"circle\"  size= \"small\" onClick={() => onClick(movieId)}>\r\n        {label}\r\n      </Button>\r\n      <p>You {text} this</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Opinion;\r\n","import React from \"react\";\r\nimport \"./DeleteMovie.css\";\r\nimport { Button} from 'antd';\r\nimport {CloseOutlined} from '@ant-design/icons';\r\n\r\nfunction DeleteMovie(props) {\r\n  const { onDelete, movieInfo } = props;\r\n\r\n  return (\r\n    <div className=\"delete-button\">\r\n      <Button className=\"btn btn-primary2\" type=\"primary\" shape=\"circle\"  size= \"small\" onClick={() => onDelete(movieInfo)}>\r\n        <CloseOutlined/>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteMovie;\r\n","import React from \"react\";\r\nimport { Card,Popover } from \"antd\";\r\nimport \"./Movie.css\";\r\nimport Opinion from \"../Opinion/Opinion\";\r\nimport DeleteMovie from \"../DeleteMovie/DeleteMovie\";\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction Movie(props) {\r\n  const {\r\n    title,\r\n    vote_average,\r\n    // overview,\r\n    poster_path,\r\n    rating,\r\n    movieId,\r\n    showOpinion,\r\n  } = props;\r\n\r\n  const action = [];\r\n  const extra = []\r\n  if (showOpinion) {\r\n    action.push(\r\n      <Opinion onClick={props.onClick} rating={rating} movieId={movieId} />\r\n    );\r\n\r\n    extra.push(\r\n      <DeleteMovie onDelete={props.onDelete} movieInfo={props.movieInfo} />\r\n    );\r\n  }\r\n  const content = (\r\n    <div>\r\n      Rating :{vote_average}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Popover content={content} title={title}>\r\n      <Card\r\n        hoverable\r\n        style={{ width: 240 }}\r\n        cover={\r\n          <img\r\n            alt={title}\r\n            src={`https://image.tmdb.org/t/p/w200${poster_path}`}\r\n          />\r\n        }\r\n        actions={action}\r\n        extra = {extra}\r\n      >\r\n      <Meta title={`${title} (${vote_average})`} />\r\n      </Card>\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport { Row, Col, Empty } from \"antd\";\r\nimport Movie from \"../Movie/Movie\";\r\nimport \"./MovieList.css\";\r\n\r\nfunction MovieList(props) {\r\n  const { movies, rating, onClick,onDelete, showOpinion, emptyDescription } = props;\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.length ? (\r\n        <Row>\r\n          {movies.map((movieInfo) => (\r\n            <Col span={6}>\r\n              <Movie\r\n                key={movieInfo.id}\r\n                {...movieInfo}\r\n                movieId={movieInfo.id}\r\n                onClick={onClick}\r\n                onDelete={onDelete}\r\n                movieInfo ={movieInfo}\r\n                rating={rating ? rating[movieInfo.id] : null}\r\n                showOpinion={showOpinion}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ) : (\r\n        <Empty description={emptyDescription} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu() {\r\n  return (\r\n    <Menu mode=\"horizontal\">\r\n      <Menu.Item key=\"mail\">Home</Menu.Item>\r\n      <SubMenu title={<span>Blogs</span>}>\r\n        <MenuItemGroup title=\"Item 1\">\r\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n        </MenuItemGroup>\r\n        <MenuItemGroup title=\"Item 2\">\r\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n        </MenuItemGroup>\r\n      </SubMenu>\r\n      <Menu.Item key=\"alipay\">Contact Us</Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\nexport default LeftMenu;\r\n","import React, { Component } from \"react\";\r\nimport LeftMenu from \"./LeftMenu\";\r\n// import { Drawer, Button } from 'antd';\r\n// import logo from './website_logo.png'\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: \"mail\",\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"menuBar\">\r\n        <div className=\"logo\" />\r\n        <div className=\"menuCon\">\r\n          <div className=\"leftMenu\">\r\n            <LeftMenu />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import MovieIndex from \"./Data/movieIndex.json\";\r\nimport Similar from \"./Data/similarMovies.json\";\r\n\r\nfunction getSimilarMovies(movieId) {\r\n  let index;\r\n  let simMovies = [];\r\n\r\n  for (let key in MovieIndex) {\r\n    if (MovieIndex[key] === movieId) {\r\n      index = key;\r\n      simMovies = Object.values(Similar[index]);\r\n      break;\r\n    }\r\n  }\r\n\r\n  return simMovies;\r\n}\r\n\r\nexport default getSimilarMovies;","import axios from \"axios\";\r\n\r\nconst tmdbApi = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\nconst apiKey = \"0f8d529ca28503395a1f7dc2532ad517\";\r\n\r\nfunction discoverMovies(\r\n  sortBy,\r\n  includeAdult,\r\n  includeVideo,\r\n  page,\r\n  releaseDateFrom,\r\n  voteAverageFrom,\r\n  withGenres,\r\n  withoutGenres,\r\n  originalLanguage\r\n) {\r\n  return tmdbApi.get(\"/discover/movie\", {\r\n    params: {\r\n      api_key: apiKey,\r\n      sort_by: sortBy,\r\n      include_adult: includeAdult,\r\n      include_video: includeVideo,\r\n      page: page,\r\n      \"primary_release_date.gte\": releaseDateFrom,\r\n      \"vote_average.gte\": voteAverageFrom,\r\n      with_genres: withGenres,\r\n      without_genres: withoutGenres,\r\n      with_original_language: originalLanguage,\r\n    },\r\n  });\r\n}\r\n\r\nfunction getMovieDetail(movieId) {\r\n  return tmdbApi.get(`/movie/${movieId}`, {\r\n    params: {\r\n      api_key: apiKey,\r\n    },\r\n  });\r\n}\r\n\r\nfunction getTmdbRecommendation(movieId, page) {\r\n  return tmdbApi.get(`/movie/${movieId}/recommendations`, {\r\n    params: {\r\n      api_key: apiKey,\r\n      page: page,\r\n    },\r\n  });\r\n}\r\n\r\nexport { discoverMovies, getMovieDetail, getTmdbRecommendation };\r\n","import React from \"react\";\r\nimport { Tabs, Button, message } from \"antd\";\r\nimport MovieForm from \"./Components/MovieForm/MovieForm\";\r\nimport MovieList from \"./Components/MovieList/MovieList\";\r\nimport Navbar from \"./Components/Navigation/Navbar\";\r\nimport getSimilarMovies from \"./SimilarMovies\";\r\nimport {\r\n  discoverMovies,\r\n  getMovieDetail,\r\n  getTmdbRecommendation,\r\n} from \"./Repository\";\r\nimport { SearchOutlined, VideoCameraAddOutlined } from \"@ant-design/icons\";\r\nimport \"./App.css\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n      rating: {},\r\n      tmdbRecommendations: [],\r\n      tfidfRecommendations: [],\r\n      adhocRecommendations: [],\r\n      activeKey: \"watched\",\r\n    };\r\n  }\r\n\r\n  addMovie = (movie) => {\r\n    console.log(movie);\r\n    this.setState(\r\n      (prevState) => {\r\n        return {\r\n          movies: [...prevState.movies, movie],\r\n        };\r\n      },\r\n      () => {\r\n        message.success(\"Your movie is added\");\r\n      }\r\n    );\r\n  };\r\n\r\n  deleteMovie = (movie) => {\r\n    const { movies } = this.state;\r\n    const index = movies.indexOf(movie)\r\n    console.log(index)\r\n    if (index > -1) {\r\n      movies.splice(index, 1);\r\n    }\r\n    \r\n    this.setState(\r\n      (prevState) => {\r\n        return {\r\n          movies: [...prevState.movies],\r\n        };\r\n      },\r\n      () => {\r\n        message.success(\"Your movie is removed\");\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClick = (movieId) => {\r\n    const { rating } = this.state; //rating = {}\r\n    rating[movieId] = !rating[movieId];\r\n    this.setState({\r\n      rating: rating,\r\n    });\r\n  };\r\n\r\n  handleChange = (activeKey) => {\r\n    this.setState({\r\n      activeKey,\r\n    });\r\n  };\r\n\r\n  updateAdhocRecommendations = (newRecommendations) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        adhocRecommendations: prevState.adhocRecommendations.concat(\r\n          newRecommendations\r\n        ),\r\n        activeKey: \"recommendations\",\r\n      };\r\n    });\r\n  };\r\n\r\n  updateTfidfRecommendations = (newRecommendations) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        tfidfRecommendations: prevState.tfidfRecommendations.concat(\r\n          newRecommendations\r\n        ),\r\n        activeKey: \"recommendations\",\r\n      };\r\n    });\r\n  };\r\n\r\n  updateTmdbRecommendations = (newRecommendations) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        tmdbRecommendations: prevState.tmdbRecommendations.concat(\r\n          newRecommendations\r\n        ),\r\n        activeKey: \"recommendations\",\r\n      };\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState(\r\n      {\r\n        adhocRecommendations: [],\r\n        tfidfRecommendations: [],\r\n        tmdbRecommendations: [],\r\n      },\r\n      this.getRecommendations\r\n    );\r\n  };\r\n\r\n  getAdhocMovies = () => {\r\n    const { movies, rating } = this.state;\r\n    let liked = [];\r\n    let disliked = [];\r\n\r\n    const releaseDate = movies.map((movie) =>\r\n      movie.release_date.slice(0).slice(0, 4)\r\n    );\r\n    const languageOfMovie = movies.map((movie) => movie.original_language);\r\n    const voteAverage = movies.map((movie) => movie.vote_average);\r\n\r\n    movies.forEach((movie) => {\r\n      if (rating[movie.id] === false || rating[movie.id] === undefined) {\r\n        disliked = disliked.concat(movie.genre_ids);\r\n      } else {\r\n        liked = liked.concat(movie.genre_ids);\r\n      }\r\n    });\r\n\r\n    disliked = [...new Set(disliked)];\r\n    liked = [...new Set(liked)];\r\n\r\n    const like = liked.join(\"|\");\r\n    const dislike = disliked.join(\",\");\r\n    const languages = languageOfMovie.join(\"|\");\r\n    const ratings = Math.min(...voteAverage);\r\n    let releaseDateFrom = Math.min(...releaseDate);\r\n    releaseDateFrom = releaseDateFrom + \"-01-01\";\r\n\r\n    discoverMovies(\r\n      \"popularity.desc\",\r\n      false,\r\n      false,\r\n      1,\r\n      releaseDateFrom,\r\n      ratings,\r\n      like,\r\n      dislike,\r\n      languages\r\n    )\r\n      .then((response) => {\r\n        this.updateAdhocRecommendations(response.data.results);\r\n        message.success(\"Your recommendations are ready!\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        console.log(\"Movies Fetched\");\r\n      });\r\n  };\r\n\r\n  getTfidfMovies = () => {\r\n    const { movies, rating } = this.state;\r\n\r\n    const dislikedId = [];\r\n    const likedId = [];\r\n\r\n    movies.forEach((movie) => {\r\n      if (rating[movie.id] === false || rating[movie.id] === undefined) {\r\n        dislikedId.push(movie.id);\r\n      } else {\r\n        likedId.push(movie.id);\r\n      }\r\n    });\r\n\r\n    let id = [];\r\n    likedId.forEach((ids) => {\r\n      id = id.concat(getSimilarMovies(ids));\r\n    });\r\n    id = [...new Set(id)];\r\n\r\n    id.forEach((movieId) => {\r\n      getMovieDetail(movieId)\r\n        .then((response) => {\r\n          this.updateTfidfRecommendations([response.data]);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Movies Fetched\");\r\n        });\r\n    });\r\n  };\r\n\r\n  getTmdbMovies = () => {\r\n    const { movies, rating } = this.state;\r\n\r\n    const dislikedId = [];\r\n    let likedId = [];\r\n\r\n    movies.forEach((movie) => {\r\n      if (rating[movie.id] === false || rating[movie.id] === undefined) {\r\n        dislikedId.push(movie.id);\r\n      } else {\r\n        likedId.push(movie.id);\r\n      }\r\n    });\r\n\r\n    likedId.forEach((movieId) => {\r\n      getTmdbRecommendation(movieId, 1)\r\n        .then((response) => {\r\n          this.updateTmdbRecommendations(response.data.results);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"Movies Fetched\");\r\n        });\r\n    });\r\n  };\r\n\r\n  getRecommendations = () => {\r\n    this.getAdhocMovies();\r\n    this.getTfidfMovies();\r\n    this.getTmdbMovies();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movies,\r\n      rating,\r\n      activeKey,\r\n      adhocRecommendations,\r\n      tfidfRecommendations,\r\n      tmdbRecommendations,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Navbar />\r\n        <div className=\"search-box\">\r\n          <MovieForm addMovie={this.addMovie} />\r\n        </div>\r\n\r\n        <Button\r\n          className=\"recommend-button\"\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          icon={\r\n            activeKey === \"watched\" ? (\r\n              <SearchOutlined />\r\n            ) : (\r\n              <VideoCameraAddOutlined />\r\n            )\r\n          }\r\n          size=\"default\"\r\n          onClick={\r\n            activeKey === \"watched\"\r\n              ? this.onSubmit\r\n              : () => {\r\n                  this.setState({ activeKey: \"watched\" });\r\n                }\r\n          }\r\n        >\r\n          {activeKey === \"watched\" ? \"Recommend Movies!\" : \"Add More Movies!\"}\r\n        </Button>\r\n        <Tabs\r\n          onChange={this.handleChange}\r\n          activeKey={activeKey}\r\n          className=\"movie-tabs\"\r\n        >\r\n          <TabPane tab=\"Watched\" key=\"watched\">\r\n            <MovieList\r\n              movies={movies}\r\n              onClick={this.handleClick}\r\n              onDelete ={this.deleteMovie}\r\n              rating={rating}\r\n              showOpinion={true}\r\n              emptyDescription=\"No movies added!\"\r\n            />\r\n          </TabPane>\r\n          <TabPane tab=\"Recommendations\" key=\"recommendations\">\r\n            <Tabs>\r\n              <TabPane tab=\"AD-HOC Recommendations\" key=\"adhoc\">\r\n                <MovieList\r\n                  movies={adhocRecommendations}\r\n                  onClick={() => {}}\r\n                  showOpinion={false}\r\n                  emptyDescription=\"Submit your favorite movies to get recommendations!\"\r\n                />\r\n              </TabPane>\r\n              <TabPane tab=\"Our Recommendations\" key=\"tfidf\">\r\n                <MovieList\r\n                  movies={tfidfRecommendations}\r\n                  onClick={() => {}}\r\n                  showOpinion={false}\r\n                  emptyDescription=\"Submit your favorite movies to get recommendations!\"\r\n                />\r\n              </TabPane>\r\n              <TabPane tab=\"TMDB Recommendations\" key=\"tmdb\">\r\n                <MovieList\r\n                  movies={tmdbRecommendations}\r\n                  onClick={() => {}}\r\n                  showOpinion={false}\r\n                  emptyDescription=\"Submit your favorite movies to get recommendations!\"\r\n                />\r\n              </TabPane>\r\n            </Tabs>\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App text=\"Hello world!\" />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}